#!/bin/bash -e

BASE=$(pwd)

test_internet_connection() {
    if ping -c 1 8.8.8.8 >/dev/null; then
        echo 'Successfully pinged Google DNS, we are connected to the internet!'
    else
        echo 'No internet connection available'
        exit 1
    fi
}

sda_has_10gb() {
    lsblk | grep sda | grep "[1-9][0-9]\+\(.[0-9]\)\?G" >/dev/null
}

machine_boots_with_efi() {
    dmesg | grep EFI >/dev/null
}

setup_and_mount_mbr_disk() {
    parted --script /dev/sda \
        mklabel msdos \
        mkpart primary ext4 1M 100% \
        set 1 boot on
    mkfs.ext4 -F /dev/sda1
    mount /dev/sda1 /mnt
}

setup_and_mount_efi_disk() {
    parted --script /dev/sda \
        mklabel gpt \
        mkpart ESP fat32 1M 513M \
        set 1 boot on \
        mkpart hadeshd ext4 513M 100%
    mkfs.fat -F32 /dev/sda2
    mkfs.ext4 -F /dev/sda2
    mount /dev/sda2 /mnt
    mkdir -p /mnt/boot
    mount /dev/sda1 /mnt/boot
}

include_package_manager() {
    pacstrap -i /mnt base base-devel --noconfirm
}

create_file_system_table() {
    genfstab -U /mnt > /mnt/etc/fstab
}

copy_user_setup() {
    cp $BASE/user_setup /mnt/opt/user_setup
}

start_chrooted_setup() {
    cp $BASE/chrooted_setup /mnt/opt/chrooted_setup
    echo 'Setting root directory to /mnt and continuing setup...'
    arch-chroot /mnt ./opt/chrooted_setup
}

main() {
    test_internet_connection

    if sda_has_10gb; then
        echo 'Installing Arch Linux...'
        if machine_boots_with_efi; then
            echo 'Detected EFI'
            export PARTITION_TABLE='efi'
            setup_and_mount_efi_disk
        else
            export PARTITION_TABLE='mbr'
            setup_and_mount_mbr_disk
        fi
        include_package_manager
        create_file_system_table
        copy_user_setup
        start_chrooted_setup
        reboot
    else
        echo "couldn't find a suitable medium to install"
    fi
}

main
